{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/App/App.styled.js","components/App/App.jsx","Hooks/debounce-hook.js","index.js"],"names":["ContactForm","styled","form","Label","label","Input","input","Button","button","initialState","name","number","Form","onSubmit","useState","contactCred","setContactCred","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","console","log","prevState","resetState","preventDefault","htmlFor","style","marginLeft","type","pattern","title","required","onChange","id","marginRight","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","onClick","Filter","MainContainer","div","Container","children","Title","h1","App","initialContacts","setContacts","filter","setFilter","isFirstRender","useRef","localStorageKeyNane","useEffect","localContacts","localStorage","getItem","parsedContacts","JSON","parse","current","setItem","stringify","debouncedFilter","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","getFilteredContacts","useMemo","contact","toLowerCase","includes","newContact","find","alert","prevContacts","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35da231.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  display: block;\n  outline: 1px solid gray;\n  max-width: 550px;\n  padding: 30px;\n  margin-top: 30px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  background-color: whitesmoke;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: inline-blcok;\n  height: 25px;\n  margin-top: 15px;\n  min-width: 300px;\n  margin-right: 80px;\n  margin-left: auto;\n`;\n\nexport const Button = styled.button`\n  font-size: 15px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ImUsers, ImProfile, ImPhone } from 'react-icons/im';\r\n\r\nimport { ContactForm, Label, Input, Button } from './ContactForm.styled';\r\nconst initialState = { name: '', number: '' };\r\n\r\nexport const Form = ({ onSubmit }) => {\r\n  const [contactCred, setContactCred] = useState(initialState);\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value);\r\n    setContactCred(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(contactCred);\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setContactCred(initialState);\r\n  };\r\n\r\n  return (\r\n    <ContactForm onSubmit={handleSubmit}>\r\n      <Label htmlFor={nameInputId}>\r\n        Name\r\n        <ImProfile style={{ marginLeft: 15 }} />\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={contactCred.name.value}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n        />\r\n      </Label>\r\n      <Label htmlFor={numberInputId}>\r\n        Number\r\n        <ImPhone style={{ marginLeft: 15 }} />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={contactCred.number.value}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n        />\r\n      </Label>\r\n\r\n      <Button type=\"submit\">\r\n        <ImUsers style={{ marginRight: 10 }} />\r\n        Add contact\r\n      </Button>\r\n    </ContactForm>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  outline: 1px solid gray;\n  padding: 30px;\n  max-width: 550px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  font-size: 25px;\n  font-weight: normal;\n  background-color: whitesmoke;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.25fr;\n  margin-bottom: 10px;\n  font-style: italic;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border-radius: 7px;\n  cursor: pointer;\n`;\n","import React from 'react';\r\n\r\nimport { List, Item, Button } from './ContactList.styled';\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Item key={id}>\r\n        <span>{name}:</span> <span>{number}</span>\r\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  font-size: 20px;\n  max-width: 550px;\n  font-weight: normal;\n  outline: 1px solid gray;\n  padding: 30px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  background-color: whitesmoke;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  margin-top: 15px;\n  max-width: 250px;\n`;\n","import React from 'react';\r\n\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <Label>\r\n    Find contacts by name\r\n    <Input type=\"text\" value={value} onChange={onChange} />\r\n  </Label>\r\n);\r\n\r\n\r\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 40px 15px 0 15px;\n`;\n","import { MainContainer } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n`;\n","import { useState, useEffect, useRef, useMemo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport initialContacts from '../../data/contacts.json';\nimport useDebounce from '../../Hooks/debounce-hook';\n\nimport { Form } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { Container } from '../Container/Container';\n\nimport { Title } from './App.styled';\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  const isFirstRender = useRef(true);\n  const localStorageKeyNane = 'contacts';\n\n  useEffect(() => {\n    const localContacts = localStorage.getItem(localStorageKeyNane);\n    const parsedContacts = JSON.parse(localContacts);\n\n    parsedContacts && setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    localStorage.setItem(localStorageKeyNane, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const isDoubleContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isDoubleContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    setContacts(prevContacts => [newContact, ...prevContacts]);\n  };\n\n  const deleteContact = contactId => {\n    return setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const debouncedFilter = useDebounce(filter, 500);\n\n  const getFilteredContacts = useMemo(() => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(debouncedFilter.toLowerCase()),\n    );\n  }, [contacts, debouncedFilter]);\n\n  return (\n    <Container>\n      <Title>\n        Phonebook\n        <Form onSubmit={addContact} />\n      </Title>\n      <Title>\n        Contacts\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={getFilteredContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Title>\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}