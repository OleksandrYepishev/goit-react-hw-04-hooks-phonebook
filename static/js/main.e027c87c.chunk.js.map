{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["ContactForm","styled","form","Label","label","Input","input","Button","button","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","Component","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","onClick","Filter","MainContainer","div","Container","children","Title","h1","App","initialContacts","filter","addContact","newContact","find","contact","toLowerCase","alert","prevState","deleteContact","contactId","changeFilter","getFilteredContacts","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","newContacts","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e027c87c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  display: block;\n  outline: 1px solid gray;\n  max-width: 550px;\n  padding: 30px;\n  margin-top: 30px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  background-color: whitesmoke;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: blcok;\n  height: 25px;\n  margin-top: 15px;\n  min-width: 300px;\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  font-size: 15px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  cursor: pointer;\n`;\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { ContactForm, Label, Input, Button } from './ContactForm.styled';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n};\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n      this.setState({ [name]: value });\r\n     \r\n  };\r\n\r\n    handleSubmit = e => {\r\n      const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(name, number);\r\n \r\n    this.reset();\r\n  };\r\n\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactForm onSubmit={this.handleSubmit}>\r\n        <Label htmlFor={this.nameInputId}>\r\n          Name\r\n          <Input\r\n           type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}        \r\n          />\r\n            </Label>\r\n         <Label htmlFor={this.numberInputId}>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n             name=\"number\"\r\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n             required\r\n            value={this.state.number}\r\n             onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            />   \r\n            </Label>\r\n            \r\n  \r\n        <Button type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </ContactForm>\r\n    );\r\n  }\r\n}\r\n\r\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  outline: 1px solid gray;\n  padding: 30px;\n  max-width: 550px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  font-size: 25px;\n  font-weight: normal;\n  background-color: whitesmoke;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.25fr;\n  margin-bottom: 10px;\n  font-style: italic;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  border-radius: 7px;\n  cursor: pointer;\n`;\n","import React from 'react';\r\n\r\nimport { List, Item, Button } from './ContactList.styled';\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Item key={id}>\r\n        <span>{name}:</span> <span>{number}</span>\r\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  font-size: 20px;\n  max-width: 550px;\n  font-weight: normal;\n  outline: 1px solid gray;\n  padding: 30px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  background-color: whitesmoke;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  margin-top: 15px;\n  max-width: 250px;\n`;\n","import React from 'react';\r\n\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <Label>\r\n    Find contacts by name\r\n    <Input type=\"text\" value={value} onChange={onChange} />\r\n  </Label>\r\n);\r\n\r\n\r\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 40px 15px 0 15px;\n`;\n","import { MainContainer } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n`;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport initialContacts from '../../data/contacts.json';\n\nimport { Form } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { Container } from '../Container/Container';\n\nimport { Title } from './App.styled';\n\nexport class App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    parsedContacts && this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, { prevState: contacts }) {\n    const newContacts = this.state.contacts;\n    if (contacts !== newContacts) {\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const isDoubleContact = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isDoubleContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <Title>\n          Phonebook\n          <Form onSubmit={this.addContact} />\n        </Title>\n        <Title>\n          Contacts\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Title>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}